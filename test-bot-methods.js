#!/usr/bin/env node

require('dotenv').config();
const TelegramBot = require('node-telegram-bot-api');

const botToken = process.env.TELEGRAM_BOT_TOKEN;

if (!botToken) {
  console.log('‚ùå TELEGRAM_BOT_TOKEN not found');
  process.exit(1);
}

console.log('üîç Testing bot methods...\n');

try {
  const bot = new TelegramBot(botToken, { polling: false });
  
  console.log('‚úÖ Bot initialized successfully');
  console.log('\nüìã Available methods:');
  
  // Check for webhook methods
  const methods = Object.getOwnPropertyNames(Object.getPrototypeOf(bot));
  const webhookMethods = methods.filter(method => method.toLowerCase().includes('webhook'));
  
  console.log('Webhook-related methods:');
  webhookMethods.forEach(method => {
    console.log(`  - ${method}`);
  });
  
  console.log('\nAll methods containing "webhook":');
  methods.forEach(method => {
    if (method.toLowerCase().includes('webhook')) {
      console.log(`  ‚úÖ ${method}`);
    }
  });
  
  // Test specific methods
  console.log('\nüß™ Testing specific methods:');
  
  if (typeof bot.setWebhook === 'function') {
    console.log('‚úÖ setWebhook is available');
  } else {
    console.log('‚ùå setWebhook is NOT available');
  }
  
  if (typeof bot.getWebhookInfo === 'function') {
    console.log('‚úÖ getWebhookInfo is available');
  } else {
    console.log('‚ùå getWebhookInfo is NOT available');
  }
  
  if (typeof bot.setWebHook === 'function') {
    console.log('‚úÖ setWebHook is available');
  } else {
    console.log('‚ùå setWebHook is NOT available');
  }
  
  if (typeof bot.getWebHookInfo === 'function') {
    console.log('‚úÖ getWebHookInfo is available');
  } else {
    console.log('‚ùå getWebHookInfo is NOT available');
  }
  
} catch (error) {
  console.log('‚ùå Error:', error.message);
}


